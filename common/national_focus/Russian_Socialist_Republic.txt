###########################################
## Russian Socialist Republic Focus Tree ##
## By fbruchmueller and Alpinia          ##
###########################################

focus_tree = {
	id = Russia_Socialist

	country = {
		factor = 0
		modifier = {
			add = 10
			tag = SOV
		}
	}

	default = no
	continuous_focus_position = { x = 2800 y = 800 }
	
	focus = {
		id = SOV_Rebuild_the_Country
		icon = GFX_goal_big_news
		x = 7
		y = 0
		cost = 8
		select_effect = {
			country_event = {
				id = russoc.102
				days = 28
				random = 96
			}
		}
		available = {
			NOT = { country_exists = RUS }
		}
		ai_will_do = {
			factor = 1000
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Rebuild_the_Country"
			if = {
				limit = { has_idea = SOV_war_communism }
				remove_ideas = SOV_war_communism
			}
			SOV_reduce_civil_war_devastation = yes
		}
	}

	### Political Tree ###
	focus = {
		id = SOV_Proletarian_Humanism
		icon = GFX_goal_workers_for_business
		x = 1
		y = 1
		cost = 4
		available = {
			has_country_leader = {
				name = "Nikolay Bukharin"
				ruling_only = yes
			}
		}
		prerequisite = {
			focus = SOV_Rebuild_the_Country
		}
		mutually_exclusive = {
			focus = SOV_Revolutionary_Vanguard
			focus = SOV_Industrial_Democracy
		}
		ai_will_do = {
			factor = 30
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Proletarian_Humanism"
			add_ideas = SOV_proletarian_humanism_1
		}
	}

	focus = {
		id = SOV_Fight_Urban_Rural_Conflict
		icon = GFX_goal_Communist_Discourse
		relative_position_id = SOV_Proletarian_Humanism
		x = 0
		y = 1
		cost = 8
		prerequisite = {
			focus = SOV_Proletarian_Humanism
		}
		ai_will_do = {
			factor = 30
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Fight_Urban_Rural_Conflict"
			if = { #has union control
				limit = { has_idea = SOV_proletarian_humanism_4 }
				swap_ideas = {
					remove_idea = SOV_proletarian_humanism_4
					add_idea = SOV_proletarian_humanism_6
				}
			}
			else_if = { #has industrialisation
				limit = { has_idea = SOV_proletarian_humanism_5 }
				swap_ideas = {
					remove_idea = SOV_proletarian_humanism_5
					add_idea = SOV_proletarian_humanism_8
				}
			}
			else = {
				swap_ideas = {
					remove_idea = SOV_proletarian_humanism_1
					add_idea = SOV_proletarian_humanism_2
				}
			}
		}
	}

	focus = {
		id = SOV_Voluntary_Collectivisation
		icon = GFX_goal_agricultural_aid
		relative_position_id = SOV_Proletarian_Humanism
		x = -1
		y = 2
		cost = 8
		prerequisite = {
			focus = SOV_Fight_Urban_Rural_Conflict
		}
		ai_will_do = {
			factor = 30
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Voluntary_Collectivisation"
			if = { #has union control
				limit = { has_idea = SOV_proletarian_humanism_6 }
				swap_ideas = {
					remove_idea = SOV_proletarian_humanism_6
					add_idea = SOV_proletarian_humanism_7
				}
			}
			else_if = { #has industrialisation
				limit = { has_idea = SOV_proletarian_humanism_8 }
				swap_ideas = {
					remove_idea = SOV_proletarian_humanism_8
					add_idea = SOV_proletarian_humanism_9
				}
			}
			else = {
				swap_ideas = {
					remove_idea = SOV_proletarian_humanism_2
					add_idea = SOV_proletarian_humanism_3
				}
			}
		}
	}

	focus = {
		id = SOV_Cautious_Industrialisation
		icon = GFX_goal_factory_complex
		relative_position_id = SOV_Proletarian_Humanism
		x = 1
		y = 2
		cost = 8
		prerequisite = {
			focus = SOV_Proletarian_Humanism
		}
		prerequisite = {
			focus = SOV_Control_The_Unions
		}
		ai_will_do = {
			factor = 30
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Cautious_Industrialisation"
			if = { #has urban-rural conflict
				limit = { has_idea = SOV_proletarian_humanism_6 }
				swap_ideas = {
					remove_idea = SOV_proletarian_humanism_6
					add_idea = SOV_proletarian_humanism_8
				}
			}
			else_if = { #has collectivisation
				limit = { has_idea = SOV_proletarian_humanism_7 }
				swap_ideas = {
					remove_idea = SOV_proletarian_humanism_7
					add_idea = SOV_proletarian_humanism_9
				}
			}
			else = {
				swap_ideas = {
					remove_idea = SOV_proletarian_humanism_4
					add_idea = SOV_proletarian_humanism_5
				}
			}
		}
	}

	focus = {
		id = SOV_Control_The_Unions
		icon = GFX_GBR_fate_of_unions
		relative_position_id = SOV_Proletarian_Humanism
		x = 2
		y = 1
		cost = 8
		prerequisite = {
			focus = SOV_Proletarian_Humanism
			focus = SOV_Revolutionary_Vanguard
		}
		ai_will_do = {
			factor = 40
			modifier = {
				factor = 0.25
				has_stability < 0.25
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Control_The_Unions"
			add_stability = -0.1
			if = {
				limit = { has_completed_focus = SOV_Proletarian_Humanism }
				effect_tooltip = {
					swap_ideas = {
						remove_idea = SOV_proletarian_humanism_1
						add_idea = SOV_proletarian_humanism_4
					}
				}
			}
			else_if = {
				limit = { has_completed_focus = SOV_Revolutionary_Vanguard }
				effect_tooltip = {
					swap_ideas = {
						remove_idea = SOV_revolutionary_vanguard_1
						add_idea = SOV_revolutionary_vanguard_2
					}
				}
			}
			else = {
				custom_effect_tooltip = SOV_Proletarian_Revolution_tooltip
			}
			hidden_effect = {
				if = { #has proletarian humanism
					limit = { has_idea = SOV_proletarian_humanism_1 }
					swap_ideas = {
						remove_idea = SOV_proletarian_humanism_1
						add_idea = SOV_proletarian_humanism_4
					}
				}
				else_if = { #has urban-rural conflict
					limit = { has_idea = SOV_proletarian_humanism_2 }
					swap_ideas = {
						remove_idea = SOV_proletarian_humanism_2
						add_idea = SOV_proletarian_humanism_7
					}
				}
				else_if = { #has collectivisation
					limit = { has_idea = SOV_proletarian_humanism_3 }
					swap_ideas = {
						remove_idea = SOV_proletarian_humanism_3
						add_idea = SOV_proletarian_humanism_9
					}
				}
				else_if = { #has revolutionary vanguard
					limit = { has_idea = SOV_revolutionary_vanguard_1 }
					swap_ideas = {
						remove_idea = SOV_revolutionary_vanguard_1
						add_idea = SOV_revolutionary_vanguard_2
					}
				}
				else_if = { #has militarisation of labour
					limit = { has_idea = SOV_revolutionary_vanguard_3 }
					swap_ideas = {
						remove_idea = SOV_revolutionary_vanguard_3
						add_idea = SOV_revolutionary_vanguard_6
					}
				}
				else_if = { #has proletarian revolution
					limit = { has_idea = SOV_revolutionary_vanguard_4 }
					swap_ideas = {
						remove_idea = SOV_revolutionary_vanguard_4
						add_idea = SOV_revolutionary_vanguard_7
					}
				}
				else_if = { #has mass collectivisation
					limit = { has_idea = SOV_revolutionary_vanguard_5 }
					swap_ideas = {
						remove_idea = SOV_revolutionary_vanguard_5
						add_idea = SOV_revolutionary_vanguard_8
					}
				}
				else_if = { #has militarisation of labour and proletarian revolution
					limit = { has_idea = SOV_revolutionary_vanguard_9 }
					swap_ideas = {
						remove_idea = SOV_revolutionary_vanguard_9
						add_idea = SOV_revolutionary_vanguard_11
					}
				}
				else_if = { #has militarisation of labour and mass collectivisation
					limit = { has_idea = SOV_revolutionary_vanguard_10 }
					swap_ideas = {
						remove_idea = SOV_revolutionary_vanguard_10
						add_idea = SOV_revolutionary_vanguard_12
					}
				}
			}
		}
	}

	focus = {
		id = SOV_Fight_Bureaucratisation
		icon = GFX_goal_Fight_for_Freedom
		x = 2
		y = 3
		relative_position_id = SOV_Proletarian_Humanism
		cost = 8
		prerequisite = {
			focus = SOV_Control_The_Unions
		}
		ai_will_do = {
			factor = 50
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Fight_Bureaucratisation"
			add_research_slot = 1
		}
		search_filters = { FOCUS_FILTER_RESEARCH }
	}

	focus = {
		id = SOV_Revolutionary_Vanguard
		icon = GFX_goal_generic_globe
		relative_position_id = SOV_Proletarian_Humanism
		x = 3
		y = 0
		cost = 4
		available = {
			has_country_leader = {
				name = "Karl Radek"
				ruling_only = yes
			}
		}
		prerequisite = {
			focus = SOV_Rebuild_the_Country
		}
		mutually_exclusive = {
			focus = SOV_Proletarian_Humanism
			focus = SOV_Industrial_Democracy
		}
		ai_will_do = {
			factor = 30
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Revolutionary_Vanguard"
			add_ideas = SOV_revolutionary_vanguard_1
		}
	}

	focus = {
		id = SOV_Militarisation_of_Labour
		icon = GFX_goal_Focus_Military_Mobilisation
		relative_position_id = SOV_Revolutionary_Vanguard
		x = 0
		y = 2
		cost = 8
		prerequisite = {
			focus = SOV_Revolutionary_Vanguard
		}
		ai_will_do = {
			factor = 30
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Militarisation_of_Labour"
			if = { #has union control
				limit = { has_idea = SOV_revolutionary_vanguard_2 }
				swap_ideas = {
					remove_idea = SOV_revolutionary_vanguard_2
					add_idea = SOV_revolutionary_vanguard_6
				}
			}
			else_if = { #has proletarian revolution
				limit = { has_idea = SOV_revolutionary_vanguard_4 }
				swap_ideas = {
					remove_idea = SOV_revolutionary_vanguard_4
					add_idea = SOV_revolutionary_vanguard_9
				}
			}
			else_if = { #has mass collectivisation
				limit = { has_idea = SOV_revolutionary_vanguard_5 }
				swap_ideas = {
					remove_idea = SOV_revolutionary_vanguard_5
					add_idea = SOV_revolutionary_vanguard_10
				}
			}
			else_if = { #has union control and proletarian revolution
				limit = { has_idea = SOV_revolutionary_vanguard_7 }
				swap_ideas = {
					remove_idea = SOV_revolutionary_vanguard_7
					add_idea = SOV_revolutionary_vanguard_11
				}
			}
			else_if = { #has union control and mass collectivisation
				limit = { has_idea = SOV_revolutionary_vanguard_8 }
				swap_ideas = {
					remove_idea = SOV_revolutionary_vanguard_8
					add_idea = SOV_revolutionary_vanguard_12
				}
			}
			else = {
				swap_ideas = {
					remove_idea = SOV_revolutionary_vanguard_1
					add_idea = SOV_revolutionary_vanguard_3
				}
			}
		}
	}

	focus = {
		id = SOV_First_Five_Year_Plan
		icon = GFX_goal_state_economy
		relative_position_id = SOV_Revolutionary_Vanguard
		x = 1
		y = 1
		cost = 6
		prerequisite = {
			focus = SOV_Revolutionary_Vanguard
		}
		ai_will_do = {
			factor = 30
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_First_Five_Year_Plan"
			activate_mission = SOV_The_First_Five_Year_Plan
		}
	}

	focus = {
		id = SOV_Proletarian_Revolution
		icon = GFX_goal_Workers_Paradise
		relative_position_id = SOV_Revolutionary_Vanguard
		x = 3
		y = 1
		cost = 8
		prerequisite = {
			focus = SOV_Industrial_Democracy
			focus = SOV_Revolutionary_Vanguard
		}
		ai_will_do = {
			factor = 40
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Proletarian_Revolution"
			if = {
				limit = { has_completed_focus = SOV_Revolutionary_Vanguard }
				effect_tooltip = {
					swap_ideas = {
						remove_idea = SOV_revolutionary_vanguard_1
						add_idea = SOV_revolutionary_vanguard_4
					}
				}
			}
			else_if = {
				limit = { has_completed_focus = SOV_Industrial_Democracy }
				effect_tooltip = {
					swap_ideas = {
						remove_idea = SOV_industrial_democracy_1
						add_idea = SOV_industrial_democracy_2
					}
				}
			}
			else = {
				custom_effect_tooltip = SOV_Proletarian_Revolution_tooltip
			}
			hidden_effect = {
				if = { #has revolutionary vanguard
					limit = { has_idea = SOV_revolutionary_vanguard_1 }
					swap_ideas = {
						remove_idea = SOV_revolutionary_vanguard_1
						add_idea = SOV_revolutionary_vanguard_4
					}
				}
				else_if = { #has union control
					limit = { has_idea = SOV_revolutionary_vanguard_2 }
					swap_ideas = {
						remove_idea = SOV_revolutionary_vanguard_2
						add_idea = SOV_revolutionary_vanguard_7
					}
				}
				else_if = { #has militarisation of labour
					limit = { has_idea = SOV_revolutionary_vanguard_3 }
					swap_ideas = {
						remove_idea = SOV_revolutionary_vanguard_3
						add_idea = SOV_revolutionary_vanguard_9
					}
				}
				else_if = { #has union control and militarisation of labour
					limit = { has_idea = SOV_revolutionary_vanguard_6 }
					swap_ideas = {
						remove_idea = SOV_revolutionary_vanguard_6
						add_idea = SOV_revolutionary_vanguard_11
					}
				}
				else_if = { #has industrial democracy
					limit = { has_idea = SOV_industrial_democracy_1 }
					swap_ideas = {
						remove_idea = SOV_industrial_democracy_1
						add_idea = SOV_industrial_democracy_2
					}
				}
				else_if = { #has smychka
					limit = { has_idea = SOV_industrial_democracy_4 }
					swap_ideas = {
						remove_idea = SOV_industrial_democracy_4
						add_idea = SOV_industrial_democracy_8
					}
				}
				else_if = { #has VSR
					limit = { has_idea = SOV_industrial_democracy_5 }
					swap_ideas = {
						remove_idea = SOV_industrial_democracy_5
						add_idea = SOV_industrial_democracy_9
					}
				}
				else_if = { #has smychka and VSR
					limit = { has_idea = SOV_industrial_democracy_6 }
					swap_ideas = {
						remove_idea = SOV_industrial_democracy_6
						add_idea = SOV_industrial_democracy_10
					}
				}
				else_if = { #has separation of powers
					limit = { has_idea = SOV_industrial_democracy_7 }
					swap_ideas = {
						remove_idea = SOV_industrial_democracy_7
						add_idea = SOV_industrial_democracy_11
					}
				}
			}
		}
	}

	focus = {
		id = SOV_Mass_Collectivisation
		icon = GFX_goal_OTT_Land_Reform
		relative_position_id = SOV_Revolutionary_Vanguard
		x = 2
		y = 2
		cost = 8
		prerequisite = {
			focus = SOV_Proletarian_Revolution
		}
		ai_will_do = {
			factor = 40
			modifier = {
				factor = 0.25
				has_stability < 0.25
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Mass_Collectivisation"
			add_stability = -0.2
			if = {
				limit = { has_completed_focus = SOV_Revolutionary_Vanguard }
				effect_tooltip = {
					swap_ideas = {
						remove_idea = SOV_revolutionary_vanguard_4
						add_idea = SOV_revolutionary_vanguard_5
					}
				}
			}
			else_if = {
				limit = { has_completed_focus = SOV_Industrial_Democracy }
				effect_tooltip = {
					swap_ideas = {
						remove_idea = SOV_industrial_democracy_2
						add_idea = SOV_industrial_democracy_3
					}
				}
			}
			else = {
				custom_effect_tooltip = SOV_Mass_Collectivisation_tooltip
			}
			hidden_effect = {
				if = { #has revolutionary vanguard
					limit = { has_idea = SOV_revolutionary_vanguard_4 }
					swap_ideas = {
						remove_idea = SOV_revolutionary_vanguard_4
						add_idea = SOV_revolutionary_vanguard_5
					}
				}
				else_if = { #has union control
					limit = { has_idea = SOV_revolutionary_vanguard_7 }
					swap_ideas = {
						remove_idea = SOV_revolutionary_vanguard_7
						add_idea = SOV_revolutionary_vanguard_8
					}
				}
				else_if = { #has militarisation of labour
					limit = { has_idea = SOV_revolutionary_vanguard_9 }
					swap_ideas = {
						remove_idea = SOV_revolutionary_vanguard_9
						add_idea = SOV_revolutionary_vanguard_10
					}
				}
				else_if = { #has union control and militarisation of labour
					limit = { has_idea = SOV_revolutionary_vanguard_11 }
					swap_ideas = {
						remove_idea = SOV_revolutionary_vanguard_11
						add_idea = SOV_revolutionary_vanguard_12
					}
				}
				else_if = { #has industrial democracy
					limit = { has_idea = SOV_industrial_democracy_2 }
					swap_ideas = {
						remove_idea = SOV_industrial_democracy_2
						add_idea = SOV_industrial_democracy_3
					}
				}
				else_if = { #has smychka
					limit = { has_idea = SOV_industrial_democracy_8 }
					swap_ideas = {
						remove_idea = SOV_industrial_democracy_8
						add_idea = SOV_industrial_democracy_12
					}
				}
				else_if = { #has VSR
					limit = { has_idea = SOV_industrial_democracy_9 }
					swap_ideas = {
						remove_idea = SOV_industrial_democracy_9
						add_idea = SOV_industrial_democracy_13
					}
				}
				else_if = { #has smychka and VSR
					limit = { has_idea = SOV_industrial_democracy_10 }
					swap_ideas = {
						remove_idea = SOV_industrial_democracy_10
						add_idea = SOV_industrial_democracy_14
					}
				}
				else_if = { #has separation of powers
					limit = { has_idea = SOV_industrial_democracy_11 }
					swap_ideas = {
						remove_idea = SOV_industrial_democracy_11
						add_idea = SOV_industrial_democracy_15
					}
				}
			}
		}
		search_filters = { FOCUS_FILTER_RESEARCH }
	}

	focus = {
		id = SOV_Industrial_Democracy
		icon = GFX_goal_generic_workers_democracy
		relative_position_id = SOV_Proletarian_Humanism
		x = 7
		y = 0
		cost = 4
		available = {
			has_country_leader = {
				name = "Aleksandra Kollontai"
				ruling_only = yes
			}
		}
		prerequisite = {
			focus = SOV_Rebuild_the_Country
		}
		mutually_exclusive = {
			focus = SOV_Revolutionary_Vanguard
			focus = SOV_Proletarian_Humanism
		}
		ai_will_do = {
			factor = 30
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Industrial_Democracy"
			add_ideas = SOV_industrial_democracy_1
		}
	}

	focus = {
		id = SOV_Break_The_Smychka
		icon = GFX_goal_DEI_focus_disband_volksraad
		relative_position_id = SOV_Industrial_Democracy
		x = 0
		y = 2
		cost = 8
		prerequisite = {
			focus = SOV_Industrial_Democracy
		}
		prerequisite = {
			focus = SOV_Proletarian_Revolution
		}
		ai_will_do = {
			factor = 30
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Break_The_Smychka"
			if = { #has proletarian revolution
				limit = { has_idea = SOV_industrial_democracy_2 }
				swap_ideas = {
					remove_idea = SOV_industrial_democracy_2
					add_idea = SOV_industrial_democracy_8
				}
			}
			else_if = { #has mass collectivisation
				limit = { has_idea = SOV_industrial_democracy_3 }
				swap_ideas = {
					remove_idea = SOV_industrial_democracy_3
					add_idea = SOV_industrial_democracy_12
				}
			}
			else_if = { #has VSR
				limit = { has_idea = SOV_industrial_democracy_5 }
				swap_ideas = {
					remove_idea = SOV_industrial_democracy_5
					add_idea = SOV_industrial_democracy_6
				}
			}
			else_if = { #has proletarian revolution and VSR
				limit = { has_idea = SOV_industrial_democracy_9 }
				swap_ideas = {
					remove_idea = SOV_industrial_democracy_9
					add_idea = SOV_industrial_democracy_10
				}
			}
			else_if = { #has mass collectivisation and VSR
				limit = { has_idea = SOV_industrial_democracy_13 }
				swap_ideas = {
					remove_idea = SOV_industrial_democracy_13
					add_idea = SOV_industrial_democracy_14
				}
			}
			else = {
				swap_ideas = {
					remove_idea = SOV_industrial_democracy_1
					add_idea = SOV_industrial_democracy_4
				}
			}
		}
	}

	focus = {
		id = SOV_Create_the_VSR #Vserossiyskiy Sovet Rabochikh - All-Russian Congress of Producers
		icon = GFX_socialist_constitution
		relative_position_id = SOV_Industrial_Democracy
		x = 1
		y = 1
		cost = 8
		prerequisite = {
			focus = SOV_Industrial_Democracy
		}
		ai_will_do = {
			factor = 30
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Create_the_VSR"
			if = { #has proletarian revolution
				limit = { has_idea = SOV_industrial_democracy_2 }
				swap_ideas = {
					remove_idea = SOV_industrial_democracy_2
					add_idea = SOV_industrial_democracy_8
				}
			}
			else_if = { #has mass collectivisation
				limit = { has_idea = SOV_industrial_democracy_3 }
				swap_ideas = {
					remove_idea = SOV_industrial_democracy_3
					add_idea = SOV_industrial_democracy_12
				}
			}
			else_if = { #has smychka
				limit = { has_idea = SOV_industrial_democracy_4 }
				swap_ideas = {
					remove_idea = SOV_industrial_democracy_4
					add_idea = SOV_industrial_democracy_6
				}
			}
			else_if = { #has proletarian revolution and smychka
				limit = { has_idea = SOV_industrial_democracy_8 }
				swap_ideas = {
					remove_idea = SOV_industrial_democracy_8
					add_idea = SOV_industrial_democracy_10
				}
			}
			else_if = { #has mass collectivisation and smychka
				limit = { has_idea = SOV_industrial_democracy_12 }
				swap_ideas = {
					remove_idea = SOV_industrial_democracy_12
					add_idea = SOV_industrial_democracy_14
				}
			}
			else = {
				swap_ideas = {
					remove_idea = SOV_industrial_democracy_1
					add_idea = SOV_industrial_democracy_5
				}
			}
		}
	}

	focus = {
		id = SOV_Separation_Of_Powers
		icon = GFX_goal_constitutional_guarantees
		relative_position_id = SOV_Industrial_Democracy
		x = 1
		y = 3
		cost = 8
		prerequisite = {
			focus = SOV_Create_the_VSR
		}
		prerequisite = {
			focus = SOV_Break_The_Smychka
		}
		ai_will_do = {
			factor = 50
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Separation_Of_Powers"
			add_research_slot = 1
			if = { #has proletarian revolution
				limit = { has_idea = SOV_industrial_democracy_10 }
				swap_ideas = {
					remove_idea = SOV_industrial_democracy_10
					add_idea = SOV_industrial_democracy_11
				}
			}
			else_if = { #has mass collectivisation
				limit = { has_idea = SOV_industrial_democracy_14 }
				swap_ideas = {
					remove_idea = SOV_industrial_democracy_14
					add_idea = SOV_industrial_democracy_15
				}
			}
			else = {
				swap_ideas = {
					remove_idea = SOV_industrial_democracy_6
					add_idea = SOV_industrial_democracy_7
				}
			}
		}
	}
	
	### Economy Tree ###
	focus = {
		id = SOV_Help_The_People
		icon = GFX_goal_generic_construct_public_housing
		relative_position_id = SOV_Rebuild_the_Country
		x = 3
		y = 1
		cost = 8
		prerequisite = {
			focus = SOV_Rebuild_the_Country
		}
		ai_will_do = {
			factor = 40
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Help_The_People"
			SOV_reduce_civil_war_devastation = yes
		}
	}

	focus = {
		id = SOV_Rebuild_The_Bureaucracy
		icon = GFX_goal_agency
		relative_position_id = SOV_Rebuild_the_Country
		x = 5
		y = 1
		cost = 8
		prerequisite = {
			focus = SOV_Rebuild_the_Country
		}
		ai_will_do = {
			factor = 40
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Rebuild_The_Bureaucracy"
			SOV_reduce_civil_war_devastation = yes
		}
	}

	focus = {
		id = SOV_The_GOELRO_Plan
		icon = GFX_goal_Schelle
		relative_position_id = SOV_Rebuild_the_Country
		x = 7
		y = 1
		cost = 8
		prerequisite = {
			focus = SOV_Rebuild_the_Country
		}
		ai_will_do = {
			factor = 40
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_The_GOELRO_Plan"
			SOV_reduce_civil_war_devastation = yes
		}
	}

	focus = {
		id = SOV_Allow_Small_Traders
		icon = GFX_goal_generic_positive_trade_relations_gold
		relative_position_id = SOV_Rebuild_the_Country
		x = 4
		y = 3
		cost = 8
		prerequisite = {
			focus = SOV_Help_The_People
		}
		prerequisite = {
			focus = SOV_Rebuild_The_Bureaucracy
		}
		prerequisite = {
			focus = SOV_The_GOELRO_Plan
		}
		ai_will_do = {
			factor = 40
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Allow_Small_Traders"
			SOV_reduce_civil_war_devastation = yes
		}
	}

	focus = {
		id = SOV_Form_Gosplan
		icon = GFX_goal_economic_control
		relative_position_id = SOV_Rebuild_the_Country
		x = 7
		y = 2
		cost = 6
		prerequisite = {
			focus = SOV_Help_The_People
		}
		prerequisite = {
			focus = SOV_Rebuild_The_Bureaucracy
		}
		prerequisite = {
			focus = SOV_The_GOELRO_Plan
		}
		ai_will_do = {
			factor = 20
			modifier = {
				factor = 1.5
				has_active_mission = SOV_The_First_Five_Year_Plan
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Form_Gosplan"
			add_ideas = SOV_gosplan_1
		}
		search_filters = { FOCUS_FILTER_INDUSTRY }
	}

	focus = {
		id = SOV_Mechanisation
		icon = GFX_focus_AUS_agriculture
		relative_position_id = SOV_Form_Gosplan
		x = 1
		y = 1
		cost = 6
		prerequisite = {
			focus = SOV_Form_Gosplan
		}
		ai_will_do = {
			factor = 20
			modifier = {
				factor = 1.5
				has_active_mission = SOV_The_First_Five_Year_Plan
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Mechanisation"
			if = {
				limit = { has_idea = SOV_gosplan_2 } #has industrialisation
				swap_ideas = {
					remove_idea = SOV_gosplan_2
					add_idea = SOV_gosplan_7
				}
			}
			else_if = {
				limit = { has_idea = SOV_gosplan_3 } #has khozraschyot
				swap_ideas = {
					remove_idea = SOV_gosplan_3
					add_idea = SOV_gosplan_8
				}
			}
			else_if = {
				limit = { has_idea = SOV_gosplan_6 } #has industrialisation + khozraschyot
				swap_ideas = {
					remove_idea = SOV_gosplan_6
					add_idea = SOV_gosplan_9
				}
			}
			else_if = {
				limit = { has_idea = SOV_gosplan_5 } #has tankograd
				swap_ideas = {
					remove_idea = SOV_gosplan_5
					add_idea = SOV_gosplan_11
				}
			}
			else_if = {
				limit = { has_idea = SOV_gosplan_10 } #has tankograd + khozraschyot
				swap_ideas = {
					remove_idea = SOV_gosplan_10
					add_idea = SOV_gosplan_12
				}
			}
			else = {
				swap_ideas = {
					remove_idea = SOV_gosplan_1
					add_idea = SOV_gosplan_4
				}
			}
			unlock_decision_tooltip = RUS_Develop_Industry_In_Kursk
			unlock_decision_tooltip = RUS_Develop_Industry_In_Tsaritsyn
			unlock_decision_tooltip = RUS_Develop_Industry_In_Kazan
		}
		search_filters = { FOCUS_FILTER_INDUSTRY }
	}

	focus = {
		id = SOV_Khozraschyot
		icon = GFX_goal_manage_industries
		relative_position_id = SOV_Form_Gosplan
		x = -1
		y = 1
		cost = 6
		prerequisite = {
			focus = SOV_Form_Gosplan
		}
		ai_will_do = {
			factor = 20
			modifier = {
				factor = 1.5
				has_active_mission = SOV_The_First_Five_Year_Plan
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Khozraschyot"
			if = {
				limit = { has_idea = SOV_gosplan_2 } #has industrialisation
				swap_ideas = {
					remove_idea = SOV_gosplan_2
					add_idea = SOV_gosplan_6
				}
			}
			else_if = {
				limit = { has_idea = SOV_gosplan_4 } #has mechanisation
				swap_ideas = {
					remove_idea = SOV_gosplan_4
					add_idea = SOV_gosplan_8
				}
			}
			else_if = {
				limit = { has_idea = SOV_gosplan_7 } #has industrialisation + mechanisation
				swap_ideas = {
					remove_idea = SOV_gosplan_7
					add_idea = SOV_gosplan_9
				}
			}
			else_if = {
				limit = { has_idea = SOV_gosplan_5 } #has tankograd
				swap_ideas = {
					remove_idea = SOV_gosplan_5
					add_idea = SOV_gosplan_10
				}
			}
			else_if = {
				limit = { has_idea = SOV_gosplan_11 } #has tankograd + mechanisation
				swap_ideas = {
					remove_idea = SOV_gosplan_11
					add_idea = SOV_gosplan_12
				}
			}
			else = {
				swap_ideas = {
					remove_idea = SOV_gosplan_1
					add_idea = SOV_gosplan_3
				}
			}
			unlock_decision_tooltip = RUS_Develop_Industry_In_Perm
			unlock_decision_tooltip = RUS_Develop_Industry_In_Ufa
			unlock_decision_tooltip = RUS_Develop_Industry_In_Pskov
		}
		search_filters = { FOCUS_FILTER_INDUSTRY }
	}

	focus = {
		id = SOV_Promote_Industrialisation
		icon = GFX_goal_social_reforms
		relative_position_id = SOV_Form_Gosplan
		x = -2
		y = 2
		cost = 6
		prerequisite = {
			focus = SOV_Allow_Small_Traders
		}
		prerequisite = {
			focus = SOV_Form_Gosplan
		}
		ai_will_do = {
			factor = 20
			modifier = {
				factor = 1.5
				has_active_mission = SOV_The_First_Five_Year_Plan
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Promote_Industrialisation"
			if = {
				limit = { has_idea = SOV_gosplan_3 } #has khozraschyot
				swap_ideas = {
					remove_idea = SOV_gosplan_3
					add_idea = SOV_gosplan_6
				}
			}
			else_if = {
				limit = { has_idea = SOV_gosplan_4 } #has mechanisation
				swap_ideas = {
					remove_idea = SOV_gosplan_4
					add_idea = SOV_gosplan_8
				}
			}
			else_if = {
				limit = { has_idea = SOV_gosplan_8 } #has khozraschyot + mechanisation
				swap_ideas = {
					remove_idea = SOV_gosplan_8
					add_idea = SOV_gosplan_9
				}
			}
			else = {
				swap_ideas = {
					remove_idea = SOV_gosplan_1
					add_idea = SOV_gosplan_2
				}
			}
			unlock_decision_tooltip = RUS_Develop_Industry_In_Novgorod
			unlock_decision_tooltip = RUS_Develop_Industry_In_Yaroslavl
			unlock_decision_tooltip = RUS_Develop_Industry_In_Nizhny_Novgorod
		}
		search_filters = { FOCUS_FILTER_INDUSTRY }
	}

	focus = {
		id = SOV_Ural_Tractor_Plants
		text = RUS_Ural_Tractor_Plants
		icon = GFX_goal_generic_heavy_tank
		relative_position_id = SOV_Promote_Industrialisation
		x = -1
		y = 1
		cost = 8
		prerequisite = {
			focus = SOV_Promote_Industrialisation
		}
		ai_will_do = {
			factor = 20
			modifier = {
				factor = 1.5
				has_active_mission = SOV_The_First_Five_Year_Plan
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Ural_Tractor_Plants"
			if = {
				limit = { has_idea = SOV_gosplan_6 } #has khozraschyot
				swap_ideas = {
					remove_idea = SOV_gosplan_6
					add_idea = SOV_gosplan_10
				}
			}
			else_if = {
				limit = { has_idea = SOV_gosplan_7 } #has mechanisation
				swap_ideas = {
					remove_idea = SOV_gosplan_7
					add_idea = SOV_gosplan_11
				}
			}
			else_if = {
				limit = { has_idea = SOV_gosplan_9 } #has khozraschyot + mechanisation
				swap_ideas = {
					remove_idea = SOV_gosplan_9
					add_idea = SOV_gosplan_12
				}
			}
			else = {
				swap_ideas = {
					remove_idea = SOV_gosplan_2
					add_idea = SOV_gosplan_5
				}
			}
			572 = {
				add_extra_state_shared_building_slots = 4
				add_building_construction = {
					type = arms_factory
					level = 4
					instant_build = yes
				}
				add_resource = {
					type = steel
					amount = 25
				}
			}
			unlock_decision_tooltip = RUS_Develop_Industry_In_Yekaterinburg
			unlock_decision_tooltip = RUS_Develop_Industry_In_Chelyabinsk
		}
		search_filters = { FOCUS_FILTER_INDUSTRY }
	}

	focus = {
		id = SOV_Research_Investments
		text = RUS_Research_Investments
		icon = GFX_focus_research2
		relative_position_id = SOV_Promote_Industrialisation
		x = 0
		y = 2
		cost = 8
		prerequisite = {
			focus = SOV_Promote_Industrialisation
		}
		ai_will_do = {
			factor = 20
			modifier = {
				factor = 1.5
				has_active_mission = SOV_The_First_Five_Year_Plan
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Research_Investments"
			add_research_slot = 1
		}
		search_filters = { FOCUS_FILTER_RESEARCH }
	}

	focus = {
		id = SOV_Transsiberian_Expansion
		text = RUS_Expand_The_Transsiberian
		icon = GFX_goal_generic_railroad
		available = {
			561 = { is_owned_and_controlled_by = ROOT } # Amur
			563 = { is_owned_and_controlled_by = ROOT } # Chita
			564 = { is_owned_and_controlled_by = ROOT } # Verkhneudinsk
			566 = { is_owned_and_controlled_by = ROOT } # Irkutsk
			567 = { is_owned_and_controlled_by = ROOT } # Bratsk
			568 = { is_owned_and_controlled_by = ROOT } # Krasnoyarsk
			569 = { is_owned_and_controlled_by = ROOT } # Shcheglovsk
			657 = { is_owned_and_controlled_by = ROOT } # Blagoveshchensk
		}
		relative_position_id = SOV_Promote_Industrialisation
		x = 1
		y = 1
		cost = 8
		prerequisite = {
			focus = SOV_Promote_Industrialisation
		}
		ai_will_do = {
			factor = 20
			modifier = {
				factor = 1.5
				has_active_mission = SOV_The_First_Five_Year_Plan
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Transsiberian_Expansion"
			569 = {
				add_building_construction = {
					type = infrastructure
					level = 2
					instant_build = yes
				}
			}
			568 = {
				add_building_construction = {
					type = infrastructure
					level = 2
					instant_build = yes
				}
			}
			567 = {
				add_building_construction = {
					type = infrastructure
					level = 2
					instant_build = yes
				}
			}
			566 = {
				add_building_construction = {
					type = infrastructure
					level = 2
					instant_build = yes
				}
			}
			564 = {
				add_building_construction = {
					type = infrastructure
					level = 2
					instant_build = yes
				}
			}
			563 = {
				add_building_construction = {
					type = infrastructure
					level = 2
					instant_build = yes
				}
			}
			561 = {
				add_building_construction = {
					type = infrastructure
					level = 2
					instant_build = yes
				}
			}
			657 = {
				add_building_construction = {
					type = infrastructure
					level = 2
					instant_build = yes
				}
			}
			unlock_decision_tooltip = RUS_Develop_Industry_In_Omsk
			unlock_decision_tooltip = RUS_Develop_Industry_In_Novo_Nikolayevsk
			unlock_decision_tooltip = RUS_Develop_Industry_In_Krasnoyarsk
			unlock_decision_tooltip = RUS_Develop_Industry_In_Irkutsk
		}
		search_filters = { FOCUS_FILTER_INDUSTRY }
	}

	focus = {
		id = SOV_Resource_Prospection
		text = RUS_Resource_Prospection
		icon = GFX_goal_generic_coal_mining
		relative_position_id = SOV_Promote_Industrialisation
		x = 3
		y = 1
		cost = 6
		prerequisite = {
			focus = SOV_Promote_Industrialisation
		}
		ai_will_do = {
			factor = 20
			modifier = {
				factor = 1.5
				has_active_mission = SOV_The_First_Five_Year_Plan
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Resource_Prospection"
			unlock_decision_category_tooltip = RUS_Resource_decisions
		}
		search_filters = { FOCUS_FILTER_INDUSTRY }
	}
	
	### Foreign Tree ###

	focus = {
		id = SOV_Spreading_The_Revolution
		icon = GFX_goal_FRA_french_revanchism
		available = {
			is_subject = no
			has_completed_focus = SOV_Rebuild_the_Country
			is_major = yes
			has_army_manpower = { size > 750000 }
		}
		x = 6
		y = 5
		cost = 6

		ai_will_do = {
			factor = 5
			modifier = {
				factor = 10
				date > 1940.1.1
			}
			modifier = {
				factor = 0
				has_war = yes
			}
			modifier = {
				factor = 0
				OR = {
					has_idea = SOV_aftermath_of_the_civil_war_1
					has_idea = SOV_aftermath_of_the_civil_war_2
					has_idea = SOV_aftermath_of_the_civil_war_3
					has_idea = SOV_aftermath_of_the_civil_war_4
					has_idea = SOV_aftermath_of_the_civil_war_5
				}
				GER = {
					any_enemy_country = { is_actual_major = no }
				}
			}
			modifier = {
				factor = 10
				GER = {
					any_enemy_country = { is_actual_major = yes }
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Spreading_The_Revolution"
			unlock_decision_tooltip = SOV_Join_The_Internationale
		}
	}

	focus = {
		id = SOV_Force_Open_The_Straits
		icon = GFX_goal_RUS_middle_east
		available = {
			is_subject = no
			NOT = { country_exists = GER }
		}
		relative_position_id = SOV_Spreading_The_Revolution
		x = -3
		y = 1
		cost = 6
		prerequisite = {
			focus = SOV_Spreading_The_Revolution
		}
		ai_will_do = {
			factor = 5
			modifier = {
				factor = 0
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Spreading_The_Revolution"
			unlock_decision_category_tooltip = SOV_Spreading_The_Revolution_decisions
		}
	}

	focus = {
		id = SOV_Into_The_Caucasus
		icon = GFX_goal_RUS_caucasus
		available = {
			is_subject = no
		}
		relative_position_id = SOV_Spreading_The_Revolution
		x = -1
		y = 1
		cost = 6
		prerequisite = {
			focus = SOV_Spreading_The_Revolution
		}
		ai_will_do = {
			factor = 5
			modifier = {
				factor = 0
				has_war = yes
			}
			modifier = {
				factor = 8
				date > 1940.1.1
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Spreading_The_Revolution"
			unlock_decision_category_tooltip = SOV_Spreading_The_Revolution_decisions
		}
	}

	focus = {
		id = SOV_Secure_Central_Asia
		icon = GFX_goal_RUS_central_asia
		available = {
			is_subject = no
		}
		relative_position_id = SOV_Spreading_The_Revolution
		x = 1
		y = 1
		cost = 6
		prerequisite = {
			focus = SOV_Spreading_The_Revolution
		}
		ai_will_do = {
			factor = 5
			modifier = {
				factor = 0
				has_war = yes
			}
			modifier = {
				factor = 8
				date > 1940.1.1
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Spreading_The_Revolution"
			unlock_decision_category_tooltip = SOV_Spreading_The_Revolution_decisions
		}
	}

	focus = {
		id = SOV_The_Final_Battle
		icon = GFX_focus_ger_great_red_menace
		available = {
			is_subject = no
		}
		relative_position_id = SOV_Spreading_The_Revolution
		x = 0
		y = 2
		cost = 6
		prerequisite = {
			focus = SOV_Into_The_Caucasus
		}
		prerequisite = {
			focus = SOV_Secure_Central_Asia
		}
		ai_will_do = {
			factor = 5
			modifier = {
				factor = 0
				has_war = yes
			}
			modifier = {
				factor = 8
				date > 1940.1.1
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Spreading_The_Revolution"
			unlock_decision_tooltip = SOV_The_Final_Battle_decision
		}
	}

	focus = {
		id = SOV_Enemy_In_The_East
		icon = GFX_goal_RUS_japan
		available = {
			is_subject = no
			NOT = { country_exists = GER }
		}
		relative_position_id = SOV_Spreading_The_Revolution
		x = 3
		y = 1
		cost = 6
		prerequisite = {
			focus = SOV_Spreading_The_Revolution
		}
		ai_will_do = {
			factor = 15
			modifier = {
				factor = 0
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Spreading_The_Revolution"
			unlock_decision_category_tooltip = SOV_Spreading_The_Revolution_decisions
		}
	}
	
	### Army Tree ###

	focus = {
		id = SOV_Mobilise_Urban_Militias
		icon = GFX_goal_generic_drafted_army
		x = 19
		y = 0
		cost = 4
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Mobilise_Urban_Militias"
			division_template = {
				name = "Gorodskaya Militsiya"
				division_names_group = SOV_GAR_01
				regiments = {
					militia = { x = 0 y = 0 }
					militia = { x = 0 y = 1 }
					militia = { x = 0 y = 2 }
					militia = { x = 1 y = 0 }
					militia = { x = 1 y = 1 }
					militia = { x = 1 y = 2 }
					militia = { x = 2 y = 0 }
					militia = { x = 2 y = 1 }
					militia = { x = 2 y = 2 }
				}
			}
			random_owned_controlled_state = {
				prioritize = { 195 }
				create_unit = {
					division = "division_template = \"Gorodskaya Militsiya\" start_experience_factor = 0.1"
					owner = SOV
					prioritize_location = 6174
				}
				create_unit = {
					division = "division_template = \"Gorodskaya Militsiya\" start_experience_factor = 0.1"
					owner = SOV
					prioritize_location = 6174
				}
				create_unit = {
					division = "division_template = \"Gorodskaya Militsiya\" start_experience_factor = 0.1"
					owner = SOV
					prioritize_location = 6174
				}
			}
			random_owned_controlled_state = {
				prioritize = { 219 }
				create_unit = {
					division = "division_template = \"Gorodskaya Militsiya\" start_experience_factor = 0.1"
					owner = SOV
					prioritize_location = 6380
				}
				create_unit = {
					division = "division_template = \"Gorodskaya Militsiya\" start_experience_factor = 0.1"
					owner = SOV
					prioritize_location = 6380
				}
				create_unit = {
					division = "division_template = \"Gorodskaya Militsiya\" start_experience_factor = 0.1"
					owner = SOV
					prioritize_location = 6380
				}
			}
			random_owned_controlled_state = {
				prioritize = { 242 }
				create_unit = {
					division = "division_template = \"Gorodskaya Militsiya\" start_experience_factor = 0.1"
					owner = SOV
					prioritize_location = 306
				}
				create_unit = {
					division = "division_template = \"Gorodskaya Militsiya\" start_experience_factor = 0.1"
					owner = SOV
					prioritize_location = 11241
				}
			}
			random_owned_controlled_state = {
				prioritize = { 246 }
				create_unit = {
					division = "division_template = \"Gorodskaya Militsiya\" start_experience_factor = 0.1"
					owner = SOV
					prioritize_location = 11349
				}
			}
			random_owned_controlled_state = {
				prioritize = { 247 }
				create_unit = {
					division = "division_template = \"Gorodskaya Militsiya\" start_experience_factor = 0.1"
					owner = SOV
					prioritize_location = 6245
				}
			}
			random_owned_controlled_state = {
				prioritize = { 223 }
				create_unit = {
					division = "division_template = \"Gorodskaya Militsiya\" start_experience_factor = 0.1"
					owner = SOV
					prioritize_location = 6262
				}
			}
			random_owned_controlled_state = {
				prioritize = { 222 }
				create_unit = {
					division = "division_template = \"Gorodskaya Militsiya\" start_experience_factor = 0.1"
					owner = SOV
					prioritize_location = 9355
				}
			}
			random_owned_controlled_state = {
				prioritize = { 224 }
				create_unit = {
					division = "division_template = \"Gorodskaya Militsiya\" start_experience_factor = 0.1"
					owner = SOV
					prioritize_location = 3335
				}
			}
			random_owned_controlled_state = {
				prioritize = { 220 }
				create_unit = {
					division = "division_template = \"Gorodskaya Militsiya\" start_experience_factor = 0.1"
					owner = SOV
					prioritize_location = 3580
				}
			}
			random_owned_controlled_state = {
				prioritize = { 248 }
				create_unit = {
					division = "division_template = \"Gorodskaya Militsiya\" start_experience_factor = 0.1"
					owner = SOV
					prioritize_location = 121
				}
			}
			random_owned_controlled_state = {
				prioritize = { 252 }
				create_unit = {
					division = "division_template = \"Gorodskaya Militsiya\" start_experience_factor = 0.1"
					owner = SOV
					prioritize_location = 11375
				}
			}
			random_owned_controlled_state = {
				prioritize = { 260 }
				create_unit = {
					division = "division_template = \"Gorodskaya Militsiya\" start_experience_factor = 0.1"
					owner = SOV
					prioritize_location = 413
				}
			}
		}
		search_filters = { FOCUS_FILTER_ARMY }
	}

	focus = {
		id = SOV_Krasnaya_Gvardiya_Units
		icon = GFX_goal_agrarian_socialism
		relative_position_id = SOV_Mobilise_Urban_Militias
		x = 2
		y = 0
		cost = 4
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus RUS_Krasnaya_Gvardiya_Units"
			add_tech_bonus = {
				name = RUS_Krasnaya_Gvardiya_Units
				bonus = 1
				uses = 1
				category = land_doctrine
			}
			division_template = {
				name = "Krasnaya Gvardiya"
				division_names_group = SOV_GAR_01
				regiments = {
					infantry = { x = 0 y = 0 }
					infantry = { x = 0 y = 1 }
					infantry = { x = 0 y = 2 }
					infantry = { x = 1 y = 0 }
					infantry = { x = 1 y = 1 }
					infantry = { x = 1 y = 2 }
					infantry = { x = 2 y = 0 }
					infantry = { x = 2 y = 1 }
					infantry = { x = 2 y = 2 }
				}
			}
			random_owned_controlled_state = {
				prioritize = { 195 }
				create_unit = {
					division = "division_template = \"Krasnaya Gvardiya\" start_experience_factor = 0.1"
					owner = SOV
					prioritize_location = 6174
				}
				create_unit = {
					division = "division_template = \"Krasnaya Gvardiya\" start_experience_factor = 0.1"
					owner = SOV
					prioritize_location = 6174
				}
				create_unit = {
					division = "division_template = \"Krasnaya Gvardiya\" start_experience_factor = 0.1"
					owner = SOV
					prioritize_location = 6174
				}
			}
			random_owned_controlled_state = {
				prioritize = { 219 }
				create_unit = {
					division = "division_template = \"Gorodskaya Militsiya\" start_experience_factor = 0.1"
					owner = SOV
					prioritize_location = 6380
				}
				create_unit = {
					division = "division_template = \"Gorodskaya Militsiya\" start_experience_factor = 0.1"
					owner = SOV
					prioritize_location = 6380
				}
				create_unit = {
					division = "division_template = \"Gorodskaya Militsiya\" start_experience_factor = 0.1"
					owner = SOV
					prioritize_location = 6380
				}
			}
		}
		search_filters = { FOCUS_FILTER_ARMY }
	}

	focus = {
		id = SOV_Rally_The_Defectors
		icon = GFX_goal_Communist_Discourse
		relative_position_id = SOV_Mobilise_Urban_Militias
		x = 4
		y = 0
		cost = 4
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Rally_The_Defectors"
			if = {
				limit = {
					RUS = { has_completed_focus = RUS_Front_Line_Commissars }
				}
				custom_effect_tooltip = SOV_Rally_The_Defectors_tooltip
				RUS = {
					transfer_units_fraction = {
						target = ROOT
						size = 0.05
						air_ratio = 0
						navy_ratio = 0
						keep_unit_leaders_trigger = { always = yes }
					}
				}
			}
			else = {
				RUS = {
					transfer_units_fraction = {
						target = ROOT
						size = 0.1
						air_ratio = 0
						navy_ratio = 0
						keep_unit_leaders_trigger = { always = yes }
					}
				}
			}
			hidden_effect = {
				transfer_navy = { target = RUS }
				RUS = {
					country_event = {
						id = russia.1945
						days = 10
						random = 240
					}
				}
			}
		}
		search_filters = { FOCUS_FILTER_ARMY }
	}

	focus = {
		id = SOV_The_War_Effort
		icon = GFX_goal_SOV_army
		relative_position_id = SOV_Krasnaya_Gvardiya_Units
		x = 0
		y = 1
		cost = 5
		prerequisite = {
			focus = SOV_Mobilise_Urban_Militias
		}
		prerequisite = {
			focus = SOV_Krasnaya_Gvardiya_Units
		}
		prerequisite = {
			focus = SOV_Rally_The_Defectors
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_The_War_Effort"
			remove_ideas = SOV_chaotic_revolution
			hidden_effect = {
				country_lock_all_division_template = no
			}
		}
		search_filters = { FOCUS_FILTER_ARMY }
	}

	focus = {
		id = SOV_Rebuild_The_Red_Army
		icon = GFX_goal_reform_socialist_army
		relative_position_id = SOV_The_War_Effort
		x = -2
		y = 1
		cost = 6
		mutually_exclusive = {
			focus = SOV_Empower_The_Krasnaya_Gvardiya
		}
		prerequisite = {
			focus = SOV_The_War_Effort
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Rebuild_The_Red_Army"
			add_ideas = SOV_new_red_army_1
		}
		search_filters = { FOCUS_FILTER_ARMY }
	}

	focus = {
		id = SOV_Centralised_Command
		icon = GFX_goal_officers
		relative_position_id = SOV_Rebuild_The_Red_Army
		x = -1
		y = 1
		cost = 6
		prerequisite = {
			focus = SOV_Rebuild_The_Red_Army
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Centralised_Command"
			swap_ideas = {
				remove_idea = SOV_new_red_army_1
				add_idea = SOV_new_red_army_2
			}
		}
		search_filters = { FOCUS_FILTER_ARMY }
	}

	focus = {
		id = SOV_Reinstate_The_Cheka
		icon = GFX_goal_NOR_secret_police
		relative_position_id = SOV_Rebuild_The_Red_Army
		x = -1
		y = 2
		cost = 6
		prerequisite = {
			focus = SOV_Centralised_Command
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Reinstate_The_Cheka"
			if = {
				limit = { has_dlc = "La Resistance" }
				if = {
					limit = { has_intelligence_agency = no }
					create_intelligence_agency = {
						name = "Cheka"
						icon = GFX_intelligence_agency_logo_sov
					}
				}
				else_if = {
					limit = {
						NOT = { has_done_agency_upgrade = upgrade_army_department }
					}
					upgrade_intelligence_agency = upgrade_army_department
				}
				else = {
					add_political_power = 50
				}
				swap_ideas = {
					remove_idea = SOV_new_red_army_2
					add_idea = SOV_new_red_army_3_lar
				}
			}
			else = {
				swap_ideas = {
					remove_idea = SOV_new_red_army_2
					add_idea = SOV_new_red_army_3
				}
				add_tech_bonus = {
					name = SOV_Reinstate_The_Cheka
					bonus = 1
					uses = 1
					category = encryption_tech
					category = decryption_tech
				}
			}
		}
		search_filters = { FOCUS_FILTER_ARMY }
	}

	focus = {
		id = SOV_War_Communism
		icon = GFX_goal_Focus_Military_Mobilisation
		relative_position_id = SOV_Rebuild_The_Red_Army
		x = 1
		y = 1
		cost = 6
		prerequisite = {
			focus = SOV_Rebuild_The_Red_Army
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_War_Communism"
			add_ideas = SOV_war_communism
		}
		search_filters = { FOCUS_FILTER_ARMY }
	}

	focus = {
		id = SOV_The_Second_Red_Army
		icon = GFX_goal_generic_join_faction
		relative_position_id = SOV_Rebuild_The_Red_Army
		x = 0
		y = 3
		cost = 6
		prerequisite = {
			focus = SOV_War_Communism
		}
		prerequisite = {
			focus = SOV_Reinstate_The_Cheka
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_The_Second_Red_Army"
			if = {
				limit = { has_dlc = "La Resistance" }
				swap_ideas = {
					remove_idea = SOV_new_red_army_3_lar
					add_idea = SOV_new_red_army_4_lar
				}
			}
			else = {
				swap_ideas = {
					remove_idea = SOV_new_red_army_3
					add_idea = SOV_new_red_army_4
				}
			}
		}
		search_filters = { FOCUS_FILTER_ARMY }
	}

	focus = {
		id = SOV_Reorganise_Armament_Production
		icon = GFX_focus_focus_fra_maquis
		relative_position_id = SOV_The_War_Effort
		x = 1
		y = 2
		cost = 6
		prerequisite = {
			focus = SOV_Rebuild_The_Red_Army
			focus = SOV_Empower_The_Krasnaya_Gvardiya
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Reorganise_Armament_Production"
			add_tech_bonus = {
				name = SOV_Reorganise_Armament_Production
				bonus = 1
				uses = 1
				category = infantry_weapons
			}
			add_ideas = SOV_armament_production_1
		}
		search_filters = { FOCUS_FILTER_ARMY }
	}

	focus = {
		id = SOV_The_Peoples_Logistics_Corps
		icon = GFX_goal_generic_war_in_the_plate
		relative_position_id = SOV_Reorganise_Armament_Production
		x = -1
		y = 1
		cost = 6
		prerequisite = {
			focus = SOV_Rebuild_The_Red_Army
		}
		prerequisite = {
			focus = SOV_Reorganise_Armament_Production
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_The_Peoples_Logistics_Corps"
			custom_effect_tooltip = SOV_The_Peoples_Logistics_Corps_tooltip
			hidden_effect = {
				swap_ideas = {
					remove_idea = SOV_armament_production_1
					add_idea = SOV_armament_production_2
				}
			}
		}
		search_filters = { FOCUS_FILTER_ARMY }
	}

	focus = {
		id = SOV_Local_Workshops
		icon = GFX_goal_syndicalist_workers
		relative_position_id = SOV_Reorganise_Armament_Production
		x = 1
		y = 1
		cost = 6
		prerequisite = {
			focus = SOV_Reorganise_Armament_Production
		}
		prerequisite = {
			focus = SOV_Empower_The_Krasnaya_Gvardiya
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Local_Workshops"
			swap_ideas = {
				remove_idea = SOV_armament_production_1
				add_idea = SOV_armament_production_3
			}
		}
		search_filters = { FOCUS_FILTER_ARMY }
	}

	focus = {
		id = SOV_Dedicated_Artillery_Battalions
		icon = GFX_goal_GEO_Artillery_Tactics
		relative_position_id = SOV_Reorganise_Armament_Production
		x = 0
		y = 2
		cost = 6
		prerequisite = {
			focus = SOV_Local_Workshops
			focus = SOV_The_Peoples_Logistics_Corps
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Dedicated_Artillery_Battalions"
			add_tech_bonus = {
				name = SOV_Dedicated_Artillery_Battalions
				bonus = 1
				uses = 1
				category = artillery
			}
			custom_effect_tooltip = SOV_Dedicated_Artillery_Battalions_tooltip
			hidden_effect = {
				if = {
					limit = { has_idea = SOV_armament_production_2 }
					swap_ideas = {
						remove_idea = SOV_armament_production_2
						add_idea = SOV_armament_production_4
					}
				}
				else = {
					swap_ideas = {
						remove_idea = SOV_armament_production_3
						add_idea = SOV_armament_production_5
					}
				}
			}
		}
		search_filters = { FOCUS_FILTER_ARMY }
	}

	focus = {
		id = SOV_Empower_The_Krasnaya_Gvardiya
		icon = GFX_goal_integrate_the_militia
		relative_position_id = SOV_The_War_Effort
		x = 2
		y = 1
		cost = 6
		mutually_exclusive = {
			focus = SOV_Rebuild_The_Red_Army
		}
		prerequisite = {
			focus = SOV_The_War_Effort
		}
		ai_will_do = {
			factor = 20
			modifier = {
				factor = 1.5
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Empower_The_Krasnaya_Gvardiya"
			add_ideas = SOV_krasnaya_gvardiya_1
		}
		search_filters = { FOCUS_FILTER_ARMY }
	}

	focus = {
		id = SOV_Decentralised_Structure
		icon = GFX_goal_planning_bonus
		relative_position_id = SOV_Empower_The_Krasnaya_Gvardiya
		x = 1
		y = 1
		cost = 6
		prerequisite = {
			focus = SOV_Empower_The_Krasnaya_Gvardiya
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Decentralised_Structure"
			swap_ideas = {
				remove_idea = SOV_krasnaya_gvardiya_1
				add_idea = SOV_krasnaya_gvardiya_2
			}
		}
		search_filters = { FOCUS_FILTER_ARMY }
	}

	focus = {
		id = SOV_Reconnaissance_Units
		icon = GFX_goal_DOM_Recon
		relative_position_id = SOV_Empower_The_Krasnaya_Gvardiya
		x = 2
		y = 2
		cost = 6
		prerequisite = {
			focus = SOV_Decentralised_Structure
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Reconnaissance_Units"
			custom_effect_tooltip = improved_recon_units_tech_effect
			hidden_effect = {
				set_technology = { improved_recon_units_tech = 1 }
			}
		}
		search_filters = { FOCUS_FILTER_ARMY }
	}

	focus = {
		id = SOV_Officer_Initiative
		icon = GFX_focus_prc_infiltration
		relative_position_id = SOV_Empower_The_Krasnaya_Gvardiya
		x = 4
		y = 2
		cost = 6
		prerequisite = {
			focus = SOV_Decentralised_Structure
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Officer_Initiative"
			swap_ideas = {
				remove_idea = SOV_krasnaya_gvardiya_2
				add_idea = SOV_krasnaya_gvardiya_3
			}
		}
		search_filters = { FOCUS_FILTER_ARMY }
	}

	focus = {
		id = SOV_Small_Unit_Tactics
		icon = GFX_focus_generic_manpower
		relative_position_id = SOV_Empower_The_Krasnaya_Gvardiya
		x = 2
		y = 3
		cost = 6
		prerequisite = {
			focus = SOV_Reconnaissance_Units
		}
		prerequisite = {
			focus = SOV_Local_Workshops
		}
		prerequisite = {
			focus = SOV_Officer_Initiative
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Small_Unit_Tactics"
			swap_ideas = {
				remove_idea = SOV_krasnaya_gvardiya_3
				add_idea = SOV_krasnaya_gvardiya_4
			}
		}
		search_filters = { FOCUS_FILTER_ARMY }
	}

	focus = {
		id = SOV_Frunzes_Reform_Plan
		icon = GFX_focus_chi_army_reform
		available = {
			NOT = { country_exists = RUS }
		}
		relative_position_id = SOV_The_War_Effort
		x = -1
		y = 5
		cost = 6
		mutually_exclusive = {
			focus = SOV_Tukhachevskiys_Reform_Plan
		}
		prerequisite = {
			focus = SOV_The_Second_Red_Army
			focus = SOV_Small_Unit_Tactics
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 3
				has_war = yes
			}
			modifier = {
				factor = 0.5
				OR = {
					has_tech = mobile_warfare
					has_tech = superior_firepower
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Frunzes_Reform_Plan"
			add_ideas = SOV_frunzes_reform_plan_1
		}
		search_filters = { FOCUS_FILTER_ARMY }
	}

	focus = {
		id = SOV_Expand_The_High_Command
		icon = GFX_focus_generic_military_mission
		relative_position_id = SOV_The_War_Effort
		x = -3
		y = 6
		cost = 8
		prerequisite = {
			focus = SOV_Frunzes_Reform_Plan
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 3
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Expand_The_High_Command"
			add_tech_bonus = {
				name = SOV_Expand_The_High_Command
				bonus = 1
				uses = 1
				category = land_doctrine
			}
			if = {
				limit = { has_idea = SOV_frunzes_reform_plan_3 }
				swap_ideas = {
					remove_idea = SOV_frunzes_reform_plan_3
					add_idea = SOV_frunzes_reform_plan_4
				}
			}
			else = {
				swap_ideas = {
					remove_idea = SOV_frunzes_reform_plan_1
					add_idea = SOV_frunzes_reform_plan_2
				}
			}
		}
		search_filters = { FOCUS_FILTER_ARMY }
	}

	focus = {
		id = SOV_Officer_Training_Academies
		icon = GFX_focus_generic_military_academy
		relative_position_id = SOV_The_War_Effort
		x = -1
		y = 6
		cost = 8
		prerequisite = {
			focus = SOV_Frunzes_Reform_Plan
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 3
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Officer_Training_Academies"
			add_tech_bonus = {
				name = SOV_Officer_Training_Academies
				bonus = 1
				uses = 1
				category = land_doctrine
			}
			if = {
				limit = { has_idea = SOV_frunzes_reform_plan_2 }
				swap_ideas = {
					remove_idea = SOV_frunzes_reform_plan_2
					add_idea = SOV_frunzes_reform_plan_4
				}
			}
			else = {
				swap_ideas = {
					remove_idea = SOV_frunzes_reform_plan_1
					add_idea = SOV_frunzes_reform_plan_3
				}
			}
		}
		search_filters = { FOCUS_FILTER_ARMY }
	}

	focus = {
		id = SOV_Professional_Engineer_Corps
		icon = GFX_goal_generic_construction2
		relative_position_id = SOV_The_War_Effort
		x = 1
		y = 6
		cost = 6
		prerequisite = {
			focus = SOV_Frunzes_Reform_Plan
			focus = SOV_Tukhachevskiys_Reform_Plan
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 3
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Professional_Engineer_Corps"
			custom_effect_tooltip = expanded_engineer_corps_tech_effect
			hidden_effect = {
				set_technology = { expanded_engineer_corps_tech = 1 }
			}
		}
		search_filters = { FOCUS_FILTER_ARMY }
	}

	focus = {
		id = SOV_Tukhachevskiys_Reform_Plan
		icon = GFX_focus_generic_combined_arms
		available = {
			NOT = { country_exists = RUS }
		}
		relative_position_id = SOV_The_War_Effort
		x = 2
		y = 5
		cost = 6
		mutually_exclusive = {
			focus = SOV_Frunzes_Reform_Plan
		}
		prerequisite = {
			focus = SOV_The_Second_Red_Army
			focus = SOV_Small_Unit_Tactics
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 3
				has_war = yes
			}
			modifier = {
				factor = 0.5
				OR = {
					has_tech = trench_warfare
					has_tech = mass_assault
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Tukhachevskiys_Reform_Plan"
			add_ideas = SOV_tukhachevskiys_reform_plan_1
		}
		search_filters = { FOCUS_FILTER_ARMY }
	}

	focus = {
		id = SOV_Mass_Breakthroughs
		icon = GFX_EGY_Operation_Abu
		relative_position_id = SOV_The_War_Effort
		x = 3
		y = 6
		cost = 8
		prerequisite = {
			focus = SOV_Tukhachevskiys_Reform_Plan
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 3
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Mass_Breakthroughs"
			add_tech_bonus = {
				name = SOV_Mass_Breakthroughs
				bonus = 1
				uses = 1
				category = armor
			}
			custom_effect_tooltip = SOV_Mass_Breakthroughs_tooltip
			hidden_effect = {
				if = {
					limit = { has_idea = SOV_tukhachevskiys_reform_plan_3 }
					swap_ideas = {
						remove_idea = SOV_tukhachevskiys_reform_plan_3
						add_idea = SOV_tukhachevskiys_reform_plan_4
					}
				}
				else = {
					swap_ideas = {
						remove_idea = SOV_tukhachevskiys_reform_plan_1
						add_idea = SOV_tukhachevskiys_reform_plan_2
					}
				}
			}
		}
		search_filters = { FOCUS_FILTER_ARMY }
	}

	focus = {
		id = SOV_Land_Air_Integration
		icon = GFX_goal_new_airforce
		relative_position_id = SOV_The_War_Effort
		x = 5
		y = 6
		cost = 8
		prerequisite = {
			focus = SOV_Tukhachevskiys_Reform_Plan
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 3
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Land_Air_Integration"
			add_tech_bonus = {
				name = SOV_Land_Air_Integration
				bonus = 1
				uses = 1
				category = cas_bomber
			}
			custom_effect_tooltip = SOV_Land_Air_Integration_tooltip
			hidden_effect = {
				if = {
					limit = { has_idea = SOV_tukhachevskiys_reform_plan_2 }
					swap_ideas = {
						remove_idea = SOV_tukhachevskiys_reform_plan_2
						add_idea = SOV_tukhachevskiys_reform_plan_4
					}
				}
				else = {
					swap_ideas = {
						remove_idea = SOV_tukhachevskiys_reform_plan_1
						add_idea = SOV_tukhachevskiys_reform_plan_3
					}
				}
			}
		}
		search_filters = { FOCUS_FILTER_ARMY }
	}
	
	### Air Tree ###
	focus = {
		id = SOV_Establish_The_VVS
		available = {
			if = {
				limit = { has_war_with = RUS }
				has_completed_focus = SOV_The_War_Effort
			}
		}
		icon = GFX_goal_air_red
		x = 28
		y = 0
		cost = 6
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Establish_The_VVS"
			air_experience = 50
		}
		search_filters = { FOCUS_FILTER_ARMY }
	}

	focus = {
		id = SOV_Airspace_Defence
		icon = GFX_focus_generic_air_defense2
		relative_position_id = SOV_Establish_The_VVS
		x = -2
		y = 1
		cost = 6
		prerequisite = {
			focus = SOV_Establish_The_VVS
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Airspace_Defence"
			219 = {
				add_building_construction = {
					type = anti_air_building
					level = 1
					instant_build = yes
				}
			}
			195 = {
				add_building_construction = {
					type = anti_air_building
					level = 1
					instant_build = yes
				}
			}
		}
		search_filters = { FOCUS_FILTER_ARMY }
	}

	focus = {
		id = SOV_The_ORT_System
		icon = GFX_EGY_Radio_Free_Cairo
		relative_position_id = SOV_Establish_The_VVS
		x = -2
		y = 2
		cost = 8
		prerequisite = {
			focus = SOV_Airspace_Defence
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_The_ORT_System"
			add_tech_bonus = {
				name = SOV_The_ORT_System
				bonus = 1
				uses = 2
				category = radar_tech
			}
		}
		search_filters = { FOCUS_FILTER_ARMY }
	}

	focus = {
		id = SOV_Aviation_Bureaus
		icon = GFX_goal_DOM_Air_Fuel
		relative_position_id = SOV_Establish_The_VVS
		x = 0
		y = 2
		cost = 8
		prerequisite = {
			focus = SOV_Establish_The_VVS
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Aviation_Bureaus"
			add_tech_bonus = {
				name = SOV_Aviation_Bureaus
				bonus = 1
				uses = 2
				category = air_doctrine
			}
		}
		search_filters = { FOCUS_FILTER_ARMY }
	}

	focus = {
		id = SOV_Nationalise_The_Aircraft_Industry
		icon = GFX_goal_generic_takeover_industries
		relative_position_id = SOV_Establish_The_VVS
		x = 1
		y = 1
		cost = 6
		prerequisite = {
			focus = SOV_Establish_The_VVS
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Nationalise_The_Aircraft_Industry"
			random_owned_controlled_state = {
				prioritize = { 263 }
				add_extra_state_shared_building_slots = 1
				add_building_construction = {
					type = arms_factory
					level = 1
					instant_build = yes
				}
			}
			add_equipment_to_stockpile = {
				type = fighter_equipment
				amount = 50
				producer = RUS
			}
			add_equipment_to_stockpile = {
				type = cas_equipment
				amount = 25
				producer = RUS
			}
		}
		search_filters = { FOCUS_FILTER_ARMY }
	}

	focus = {
		id = SOV_Naval_Bomber_Development
		text = RUS_Naval_Bomber_Development
		icon = GFX_goal_generic_air_naval_bomber
		relative_position_id = SOV_Establish_The_VVS
		x = 2
		y = 2
		cost = 6
		prerequisite = {
			focus = SOV_Nationalise_The_Aircraft_Industry
		}
		prerequisite = {
			focus = SOV_Take_To_The_Seas
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Naval_Bomber_Development"
			add_tech_bonus = {
				name = SOV_Naval_Bomber_Development
				bonus = 1
				uses = 1
				category = naval_bomber
			}
		}
		search_filters = { FOCUS_FILTER_ARMY }
	}

	focus = {
		id = SOV_Create_The_VDV
		text = RUS_Create_The_VDV
		icon = GFX_focus_generic_paratrooper
		relative_position_id = SOV_Establish_The_VVS
		x = -1
		y = 3
		cost = 8
		prerequisite = {
			focus = SOV_Aviation_Bureaus
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Nationalise_The_Aircraft_Industry"
			division_template = {
				name = "Vozdushno-Desantnye Voyska"
				division_names_group = SOV_PAR_01
				regiments = {
					paratrooper = { x = 0 y = 0 }
					paratrooper = { x = 0 y = 1 }
					paratrooper = { x = 0 y = 2 }
					paratrooper = { x = 1 y = 0 }
					paratrooper = { x = 1 y = 1 }
					paratrooper = { x = 1 y = 2 }
				}
			}
			random_owned_controlled_state = {
				prioritize = { 219 }
				create_unit = {
					division = "division_template = \"Vozdushno-Desantnye Voyska\" start_experience_factor = 0.1"
					owner = SOV
					prioritize_location = 6380
				}
			}
			add_tech_bonus = {
				name = SOV_Create_The_VDV
				bonus = 1
				uses = 1
				category = para_tech
			}
		}
		search_filters = { FOCUS_FILTER_ARMY }
	}

	focus = {
		id = SOV_New_Fighters
		icon = GFX_goal_POL_recon_aircraft
		relative_position_id = SOV_Establish_The_VVS
		x = 1
		y = 3
		cost = 8
		prerequisite = {
			focus = SOV_Nationalise_The_Aircraft_Industry
		}
		prerequisite = {
			focus = SOV_Aviation_Bureaus
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_New_Fighters"
			add_tech_bonus = {
				name = SOV_New_Fighters
				bonus = 1
				uses = 2
				category = fighter_techs
			}
		}
		search_filters = { FOCUS_FILTER_ARMY }
	}
	
	### Navy Tree ###
	focus = {
		id = SOV_Take_To_The_Seas
		icon = GFX_goal_SOV_navy
		available = {
			NOT = { country_exists = RUS }
		}
		x = 36
		y = 0
		cost = 10
		ai_will_do = {
			factor = 4
			modifier = {
				factor = 5
				OR = {
					has_war_with = USA
					has_war_with = TEX
					has_war_with = CAL
					has_war_with = CAN
					has_war_with = JAP
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Take_To_The_Seas"
			navy_experience = 50
		}
		search_filters = { FOCUS_FILTER_NAVY_BONUS }
	}

	focus = {
		id = SOV_Floating_Fortresses
		text = RUS_Floating_Fortresses
		icon = GFX_focus_generic_navy_battleship3alt
		relative_position_id = SOV_Take_To_The_Seas
		x = -5
		y = 1
		cost = 10
		prerequisite = {
			focus = SOV_Take_To_The_Seas
		}
		mutually_exclusive = {
			focus = SOV_Death_From_Above
			focus = SOV_War_Under_The_Sea
		}
		ai_will_do = {
			factor = 4
			modifier = {
				factor = 0
				OR = {
					has_tech = base_strike
					has_tech = trade_interdiction
				}
			}
			modifier = {
				factor = 5
				OR = {
					has_war_with = USA
					has_war_with = TEX
					has_war_with = CAL
					has_war_with = CAN
					has_war_with = JAP
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Floating_Fortresses"
			add_tech_bonus = {
				name = SOV_Floating_Fortresses
				bonus = 1
				uses = 2
				category = cat_fleet_in_being
			}
		}
		search_filters = { FOCUS_FILTER_RESEARCH }
	}
	
	focus = {
		id = SOV_Death_From_Above
		text = RUS_Death_From_Above
		icon = GFX_goal_generic_air_fighter2
		relative_position_id = SOV_Take_To_The_Seas
		x = -3
		y = 1
		cost = 10
		prerequisite = {
			focus = SOV_Take_To_The_Seas
		}
		mutually_exclusive = {
			focus = SOV_Floating_Fortresses
			focus = SOV_War_Under_The_Sea
		}
		ai_will_do = {
			factor = 4
			modifier = {
				factor = 0
				OR = {
					has_tech = fleet_in_being
					has_tech = trade_interdiction
				}
			}
			modifier = {
				factor = 5
				OR = {
					has_war_with = USA
					has_war_with = TEX
					has_war_with = CAL
					has_war_with = CAN
					has_war_with = JAP
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Death_From_Above"
			add_tech_bonus = {
				name = SOV_Death_From_Above
				bonus = 1
				uses = 2
				category = cat_base_strike
			}
		}
		search_filters = { FOCUS_FILTER_RESEARCH }
	}

	focus = {
		id = SOV_War_Under_The_Sea
		text = RUS_War_Under_The_Sea
		icon = GFX_goal_generic_navy_anti_submarine
		relative_position_id = SOV_Take_To_The_Seas
		x = -1
		y = 1
		cost = 10
		prerequisite = {
			focus = SOV_Take_To_The_Seas
		}
		mutually_exclusive = {
			focus = SOV_Floating_Fortresses
			focus = SOV_Death_From_Above
		}
		ai_will_do = {
			factor = 4
			modifier = {
				factor = 0
				OR = {
					has_tech = fleet_in_being
					has_tech = base_strike
				}
			}
			modifier = {
				factor = 5
				OR = {
					has_war_with = USA
					has_war_with = TEX
					has_war_with = CAL
					has_war_with = CAN
					has_war_with = JAP
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_War_Under_The_Sea"
			add_tech_bonus = {
				name = SOV_War_Under_The_Sea
				bonus = 1
				uses = 2
				category = cat_trade_interdiction
			}
		}
		search_filters = { FOCUS_FILTER_RESEARCH }
	}

	focus = {
		id = SOV_The_Invisible_Navy
		text = RUS_The_Invisible_Navy
		icon = GFX_goal_generic_navy_submarine
		relative_position_id = SOV_Take_To_The_Seas
		x = -4
		y = 2
		cost = 5
		prerequisite = {
			focus = SOV_Floating_Fortresses
			focus = SOV_Death_From_Above
			focus = SOV_War_Under_The_Sea
		}
		ai_will_do = {
			factor = 4
			modifier = {
				factor = 5
				OR = {
					has_war_with = USA
					has_war_with = TEX
					has_war_with = CAL
					has_war_with = CAN
					has_war_with = JAP
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_The_Invisible_Navy"
			add_tech_bonus = {
				name = SOV_The_Invisible_Navy
				bonus = 1
				uses = 1
				category = ss_tech
			}
		}
		search_filters = { FOCUS_FILTER_RESEARCH }
	}

	focus = {
		id = SOV_Coastal_Defences
		text = RUS_Coastal_Defences
		icon = GFX_goal_nested_fortifications
		relative_position_id = SOV_Take_To_The_Seas
		allow_branch = { has_dlc = "Man the Guns" }
		x = -6
		y = 4
		cost = 5
		prerequisite = {
			focus = SOV_The_Invisible_Navy
		}
		ai_will_do = {
			factor = 4
			modifier = {
				factor = 5
				OR = {
					has_war_with = USA
					has_war_with = TEX
					has_war_with = CAL
					has_war_with = CAN
					has_war_with = JAP
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Coastal_Defences"
			add_tech_bonus = {
				name = SOV_Coastal_Defences
				bonus = 0.5
				uses = 2
				category = naval_mines
			}
		}
		search_filters = { FOCUS_FILTER_RESEARCH }
	}

	focus = {
		id = SOV_A_Destroyer_Armada
		text = RUS_A_Destroyer_Armada
		icon = GFX_focus_generic_destroyer
		relative_position_id = SOV_Take_To_The_Seas
		x = -2
		y = 2
		cost = 5
		prerequisite = {
			focus = SOV_Floating_Fortresses
			focus = SOV_Death_From_Above
			focus = SOV_War_Under_The_Sea
		}
		ai_will_do = {
			factor = 4
			modifier = {
				factor = 5
				OR = {
					has_war_with = USA
					has_war_with = TEX
					has_war_with = CAL
					has_war_with = CAN
					has_war_with = JAP
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_A_Destroyer_Armada"
			add_tech_bonus = {
				name = SOV_A_Destroyer_Armada
				bonus = 1
				uses = 1
				category = dd_tech
			}
		}
		search_filters = { FOCUS_FILTER_RESEARCH }
	}

	focus = {
		id = SOV_Fleet_Protectors
		text = RUS_Fleet_Protectors
		icon = GFX_goal_generic_navy_cruiser
		relative_position_id = SOV_Take_To_The_Seas
		allow_branch = { has_dlc = "Man the Guns" }
		x = -5
		y = 3
		cost = 5
		prerequisite = {
			focus = SOV_A_Destroyer_Armada
		}
		prerequisite = {
			focus = SOV_The_Invisible_Navy
		}
		mutually_exclusive = {
			focus = SOV_Fleet_Vanguards
		}
		ai_will_do = {
			factor = 4
			modifier = {
				factor = 5
				OR = {
					has_war_with = USA
					has_war_with = TEX
					has_war_with = CAL
					has_war_with = CAN
					has_war_with = JAP
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Fleet_Protectors"
			add_tech_bonus = {
				name = SOV_Fleet_Protectors
				bonus = 0.5
				uses = 2
				category = asw_tech
				category = cat_anti_air
			}
			add_tech_bonus = {
				name = SOV_Fleet_Protectors
				bonus = 0.5
				uses = 1
				category = cr_tech
			}
		}
		search_filters = { FOCUS_FILTER_RESEARCH }
	}

	focus = {
		id = SOV_Commerce_Raiders
		text = RUS_Commerce_Raiders
		icon = GFX_focus_generic_cruiser2
		relative_position_id = SOV_Take_To_The_Seas
		allow_branch = { has_dlc = "Man the Guns" } 
		x = -5
		y = 5
		cost = 5
		prerequisite = {
			focus = SOV_Fleet_Protectors
		}
		ai_will_do = {
			factor = 4
			modifier = {
				factor = 5
				OR = {
					has_war_with = USA
					has_war_with = TEX
					has_war_with = CAL
					has_war_with = CAN
					has_war_with = JAP
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Commerce_Raiders"
			add_tech_bonus = {
				name = SOV_Commerce_Raiders
				bonus = 0.5
				uses = 2
				category = cat_torpedo
				category = cat_targeting
			}
			add_tech_bonus = {
				name = SOV_Commerce_Raiders
				bonus = 0.5
				uses = 1
				category = cr_tech
			}
		}
		search_filters = { FOCUS_FILTER_RESEARCH }
	}

	focus = {
		id = SOV_Fleet_Vanguards
		text = RUS_Fleet_Vanguards
		icon = GFX_focus_generic_navy_battleship2
		relative_position_id = SOV_Take_To_The_Seas
		x = -2
		y = 3
		offset = {
			x = -1
			y = 0
			trigger = {
				NOT = { has_dlc = "Man the Guns" }
			}
		}
		cost = 10
		prerequisite = {
			focus = SOV_A_Destroyer_Armada
		}
		prerequisite = {
			focus = SOV_The_Invisible_Navy
		}
		mutually_exclusive = {
			focus = SOV_Fleet_Protectors
		}
		ai_will_do = {
			factor = 4
			modifier = {
				factor = 5
				OR = {
					has_war_with = USA
					has_war_with = TEX
					has_war_with = CAL
					has_war_with = CAN
					has_war_with = JAP
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Fleet_Vanguards"
			if = {
				limit = { has_dlc = "Man the Guns" }
				add_tech_bonus = {
					name = SOV_Fleet_Vanguards
					bonus = 0.75
					uses = 3
					category = cat_gunnery
					category = cat_targeting
				}
				add_tech_bonus = {
					name = SOV_Fleet_Vanguards
					bonus = 0.75
					uses = 2
					category = cr_tech
				}
			}
			else = {
				add_tech_bonus = {
					name = SOV_Fleet_Vanguards
					bonus = 1
					uses = 2
					category = cr_tech
					category = acr_tech
				}
			}
		}
		search_filters = { FOCUS_FILTER_RESEARCH }
	}

	focus = {
		id = SOV_Naval_Infantry_MTG
		text = RUS_Naval_Infantry
		icon = GFX_goal_generic_amphibious_assault
		relative_position_id = SOV_Take_To_The_Seas
		allow_branch = { has_dlc = "Man the Guns" }
		x = -4
		y = 4
		cost = 10
		prerequisite = {
			focus = SOV_Fleet_Protectors
			focus = SOV_Fleet_Vanguards
		}
		ai_will_do = {
			factor = 4
			modifier = {
				factor = 5
				OR = {
					has_war_with = USA
					has_war_with = TEX
					has_war_with = CAL
					has_war_with = CAN
					has_war_with = JAP
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Naval_Infantry"
			add_tech_bonus = {
				name = SOV_Naval_Infantry
				bonus = 1
				uses = 2
				category = marine_tech
				category = tp_tech
			}
		}
		search_filters = { FOCUS_FILTER_RESEARCH }
	}

	focus = {
		id = SOV_Naval_Infantry
		text = RUS_Naval_Infantry
		icon = GFX_goal_generic_amphibious_assault
		available = {
			OR = {
				has_war_with = JAP
				has_war_with = CAN
			}
		}
		relative_position_id = SOV_Take_To_The_Seas
		allow_branch = {
			NOT = { has_dlc = "Man the Guns" }
		}
		x = -2
		y = 4
		cost = 10
		prerequisite = {
			focus = SOV_Fleet_Vanguards
			focus = SOV_New_Tactics_For_New_Ships
		}
		ai_will_do = {
			factor = 4
			modifier = {
				factor = 5
				OR = {
					has_war_with = USA
					has_war_with = TEX
					has_war_with = CAL
					has_war_with = CAN
					has_war_with = JAP
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Naval_Infantry"
			add_tech_bonus = {
				name = SOV_Naval_Infantry
				bonus = 1
				uses = 2
				category = marine_tech
				category = tp_tech
			}
		}
		search_filters = { FOCUS_FILTER_RESEARCH }
	}

	focus = {
		id = SOV_New_Tactics_For_New_Ships
		text = RUS_New_Tactics_For_New_Ships
		icon = GFX_goal_navy_hat_ships
		relative_position_id = SOV_Take_To_The_Seas
		allow_branch = {
			NOT = { has_dlc = "Man the Guns" }
		}
		x = -1
		y = 3
		cost = 10
		prerequisite = {
			focus = SOV_Floating_Fortresses
			focus = SOV_Death_From_Above
			focus = SOV_War_Under_The_Sea
		}
		ai_will_do = {
			factor = 4
			modifier = {
				factor = 5
				OR = {
					has_war_with = USA
					has_war_with = TEX
					has_war_with = CAL
					has_war_with = CAN
					has_war_with = JAP
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_New_Tactics_For_New_Ships"
			add_tech_bonus = {
				name = SOV_Naval_Infantry
				bonus = 1
				uses = 2
				category = naval_doctrine
			}
		}
		search_filters = { FOCUS_FILTER_RESEARCH }
	}

	focus = {
		id = SOV_New_Tactics_For_New_Ships_MTG
		text = RUS_New_Tactics_For_New_Ships
		icon = GFX_goal_navy_hat_ships
		relative_position_id = SOV_Take_To_The_Seas
		allow_branch = { has_dlc = "Man the Guns" }
		x = -2
		y = 4
		cost = 10
		prerequisite = {
			focus = SOV_Fleet_Protectors
			focus = SOV_Fleet_Vanguards
		}
		ai_will_do = {
			factor = 4
			modifier = {
				factor = 5
				OR = {
					has_war_with = USA
					has_war_with = TEX
					has_war_with = CAL
					has_war_with = CAN
					has_war_with = JAP
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_New_Tactics_For_New_Ships_MTG"
			add_tech_bonus = {
				name = SOV_Naval_Infantry
				bonus = 1
				uses = 2
				category = naval_doctrine
			}
		}
		search_filters = { FOCUS_FILTER_RESEARCH }
	}

	focus = {
		id = SOV_Modernise_The_Petrograd_Dockyards
		text = RUS_Modernise_The_Petrograd_Dockyards
		icon = GFX_goal_generic_shipyard
		available = {
			195 = { is_owned_and_controlled_by = ROOT }
		}
		relative_position_id = SOV_Take_To_The_Seas
		x = 1
		y = 1
		cost = 8
		prerequisite = {
			focus = SOV_Take_To_The_Seas
		}
		ai_will_do = {
			factor = 4
			modifier = {
				factor = 5
				OR = {
					has_war_with = USA
					has_war_with = TEX
					has_war_with = CAL
					has_war_with = CAN
					has_war_with = JAP
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Modernise_The_Petrograd_Dockyards"
			random_owned_controlled_state = {
				prioritize = { 195 }
				limit = {
					is_coastal = yes
					free_building_slots = {
						building = dockyard
						size > 2
						include_locked = yes
					}
				}
				add_extra_state_shared_building_slots = 3
				add_building_construction = {
					type = dockyard
					level = 3
					instant_build = yes
				}
			}
		}
		search_filters = { FOCUS_FILTER_INDUSTRY }
	}

	focus = {
		id = SOV_Modernise_Murmansk
		text = RUS_Modernise_Murmansk
		icon = GFX_goal_CAN_explore_north
		available = {
			213 = { is_owned_and_controlled_by = ROOT }
		}
		relative_position_id = SOV_Take_To_The_Seas
		x = 2
		y = 2
		cost = 15
		prerequisite = {
			focus = SOV_Modernise_The_Petrograd_Dockyards
		}
		ai_will_do = {
			factor = 4
			modifier = {
				factor = 5
				OR = {
					has_war_with = USA
					has_war_with = TEX
					has_war_with = CAL
					has_war_with = CAN
					has_war_with = JAP
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Modernise_Murmansk"
			213 = {
				add_building_construction = {
					type = coastal_bunker
					level = 3
					province = 3134
					instant_build = yes
				}
				add_building_construction = {
					type = naval_base
					level = 4
					province = 3134
					instant_build = yes
				}
				add_building_construction = {
					type = infrastructure
					level = 3
					instant_build = yes
				}
				add_building_construction = {
					type = anti_air_building
					level = 2
					instant_build = yes
				}
				add_extra_state_shared_building_slots = 3
				add_building_construction = {
					type = dockyard
					level = 3
					instant_build = yes
				}
			}
			add_tech_bonus = {
				name = SOV_Modernise_Murmansk
				bonus = 1
				uses = 1
				ahead_reduction = 2
				category = dd_tech
			}
		}
		search_filters = { FOCUS_FILTER_INDUSTRY FOCUS_FILTER_RESEARCH }
	}

	focus = {
		id = SOV_Recover_Foreign_Blueprints
		text = RUS_Recover_Foreign_Blueprints
		icon = GFX_goal_navy_decision
		available = {
			OR = {
				137 = { is_owned_and_controlled_by = ROOT }
				408 = { is_owned_and_controlled_by = ROOT }
			}
		}
		relative_position_id = SOV_Take_To_The_Seas
		x = 1
		y = 3
		cost = 5
		prerequisite = {
			focus = SOV_Modernise_The_Petrograd_Dockyards
		}
		ai_will_do = {
			factor = 4
			modifier = {
				factor = 5
				OR = {
					has_war_with = USA
					has_war_with = TEX
					has_war_with = CAL
					has_war_with = CAN
					has_war_with = JAP
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Recover_Foreign_Blueprints"
			add_tech_bonus = {
				name = SOV_Recover_Foreign_Blueprints
				bonus = 1
				uses = 1
				ahead_reduction = 3
				category = cv_tech
				category = bb_tech

			}
		}
		search_filters = { FOCUS_FILTER_RESEARCH }
	}

	focus = {
		id = SOV_Submarines_In_Kamchatka
		text = RUS_Submarines_In_Kamchatka
		icon = GFX_goal_generic_wolf_pack
		available = {
			637 = { is_owned_and_controlled_by = ROOT }
		}
		relative_position_id = SOV_Take_To_The_Seas
		x = 0
		y = 2
		cost = 15
		prerequisite = {
			focus = SOV_Modernise_The_Petrograd_Dockyards
		}
		ai_will_do = {
			factor = 4
			modifier = {
				factor = 5
				OR = {
					has_war_with = USA
					has_war_with = TEX
					has_war_with = CAL
					has_war_with = CAN
					has_war_with = JAP
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Submarines_In_Kamchatka"
			637 = {
				add_building_construction = {
					type = coastal_bunker
					level = 3
					province = 4728
					instant_build = yes
				}
				add_building_construction = {
					type = naval_base
					level = 5
					province = 4728
					instant_build = yes
				}
				add_building_construction = {
					type = infrastructure
					level = 2
					instant_build = yes
				}
				add_building_construction = {
					type = anti_air_building
					level = 2
					instant_build = yes
				}
				add_extra_state_shared_building_slots = 3
				add_building_construction = {
					type = dockyard
					level = 3
					instant_build = yes
				}
			}
			add_tech_bonus = {
				name = SOV_Submarines_In_Kamchatka
				bonus = 1
				uses = 1
				ahead_reduction = 2
				category = ss_tech
			}
		}
		search_filters = { FOCUS_FILTER_INDUSTRY FOCUS_FILTER_RESEARCH }
	}

	focus = {
		id = SOV_Repair_Sevastopol
		text = RUS_Repair_Sevastopol
		icon = GFX_goal_generic_construct_naval_dockyard
		available = {
			137 = { is_owned_and_controlled_by = ROOT }
		}
		relative_position_id = SOV_Take_To_The_Seas
		x = 0
		y = 4
		cost = 8
		prerequisite = {
			focus = SOV_Recover_Foreign_Blueprints
		}
		ai_will_do = {
			factor = 4
			modifier = {
				factor = 5
				OR = {
					has_war_with = USA
					has_war_with = TEX
					has_war_with = CAL
					has_war_with = CAN
					has_war_with = JAP
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Repair_Sevastopol"
			137 = {
				add_building_construction = {
					type = coastal_bunker
					level = 3
					province = 3686
					instant_build = yes
				}
				add_building_construction = {
					type = naval_base
					level = 1
					province = 3686
					instant_build = yes
				}
				add_building_construction = {
					type = infrastructure
					level = 3
					instant_build = yes
				}
				add_building_construction = {
					type = anti_air_building
					level = 2
					instant_build = yes
				}
				add_extra_state_shared_building_slots = 3
				add_building_construction = {
					type = dockyard
					level = 3
					instant_build = yes
				}
			}
		}
		search_filters = { FOCUS_FILTER_INDUSTRY }
	}

	focus = {
		id = SOV_Repair_Vladivostok
		text = RUS_Repair_Vladivostok
		icon = GFX_goal_AST_upgrade_reserves
		available = {
			408 = { is_owned_and_controlled_by = ROOT }
		}
		relative_position_id = SOV_Take_To_The_Seas
		x = 2
		y = 4
		cost = 8
		prerequisite = {
			focus = SOV_Recover_Foreign_Blueprints
		}
		ai_will_do = {
			factor = 4
			modifier = {
				factor = 5
				OR = {
					has_war_with = USA
					has_war_with = TEX
					has_war_with = CAL
					has_war_with = CAN
					has_war_with = JAP
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Repair_Vladivostok"
			408 = {
				add_building_construction = {
					type = coastal_bunker
					level = 3
					province = 957
					instant_build = yes
				}
				add_building_construction = {
					type = naval_base
					level = 4
					province = 957
					instant_build = yes
				}
				add_building_construction = {
					type = infrastructure
					level = 1
					instant_build = yes
				}
				add_building_construction = {
					type = anti_air_building
					level = 2
					instant_build = yes
				}

				add_extra_state_shared_building_slots = 3
				add_building_construction = {
					type = dockyard
					level = 2
					instant_build = yes
				}
			}
		}
		search_filters = { FOCUS_FILTER_INDUSTRY }
	}

	focus = {
		id = SOV_Battleship_Development
		text = RUS_Battleship_Development
		icon = GFX_goal_generic_navy_battleship
		relative_position_id = SOV_Take_To_The_Seas
		x = -1
		y = 5
		cost = 10
		mutually_exclusive = {
			focus = SOV_Carrier_Development
		}
		prerequisite = {
			focus = SOV_Repair_Sevastopol
			focus = SOV_Repair_Vladivostok
		}
		ai_will_do = {
			factor = 4
			modifier = {
				factor = 5
				OR = {
					has_war_with = USA
					has_war_with = TEX
					has_war_with = CAL
					has_war_with = CAN
					has_war_with = JAP
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Battleship_Development"
			add_tech_bonus = {
				name = SOV_Battleship_Development
				bonus = 0.5
				uses = 2
				category = bb_tech
			}
			if = {
				limit = { has_dlc = "Man the Guns" }
				add_tech_bonus = {
					name = SOV_Battleship_Development
					bonus = 0.5
					uses = 2
					category = cat_gunnery
				}
			}	
		}
		search_filters = { FOCUS_FILTER_RESEARCH }
	}

	focus = {
		id = SOV_Carrier_Development
		text = RUS_Carrier_Development
		icon = GFX_goal_generic_navy_carrier
		relative_position_id = SOV_Take_To_The_Seas
		x = 2
		y = 5
		cost = 10
		mutually_exclusive = {
			focus = SOV_Battleship_Development
		}
		prerequisite = {
			focus = SOV_Repair_Sevastopol
			focus = SOV_Repair_Vladivostok
		}
		ai_will_do = {
			factor = 4
			modifier = {
				factor = 5
				OR = {
					has_war_with = USA
					has_war_with = TEX
					has_war_with = CAL
					has_war_with = CAN
					has_war_with = JAP
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Carrier_Development"
			add_tech_bonus = {
				name = SOV_Carrier_Development
				bonus = 0.5
				uses = 2
				category = cv_tech
			}
			add_tech_bonus = {
				name = SOV_Carrier_Development
				bonus = 0.5
				uses = 2
				category = naval_air
			}
		}
		search_filters = { FOCUS_FILTER_RESEARCH }
	}
}
